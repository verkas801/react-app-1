{"version":3,"sources":["contexts/GlobalContext.js","images/pokeball.svg","pages/Home.jsx","components/Card.jsx","graphql/pokemonList.js","pages/PokemonList.jsx","pages/MyPokemon.jsx","pages/PokemonProfile.jsx","images/pikachu.svg","images/pokecenter.png","components/Navbar.jsx","bg-3.jpg","App.js","constants/constant.js","reportWebVitals.js","index.js"],"names":["GlobalContext","createContext","GlobalContextProvider","props","state","mypokemons","addData","data","newData","Array","isArray","push","setState","storeData","localStorage","setItem","JSON","stringify","removeData","key","filter","pokemon","localData","getItem","parse","console","log","this","Provider","value","addContext","removeContext","children","Component","Home","className","src","logoStore","alt","to","Card","release","name","image","count","nickName","undefined","pathname","prop","onClick","GET_POKEMON_LIST","gql","GET_POKEMON_DETAIL","PokemonList","useState","limit","offset","opt","setOpt","useContext","useQuery","variables","pokemons","loading","error","results","forEach","id","length","setOffset","status","type","size","color","map","MyPokemon","window","confirm","alert","PokemonProfile","useLocation","history","useHistory","useParams","moves","types","newMoves","i","goBack","Math","random","check","prompt","move","NavbarComponent","Navbar","collapseOnSelect","sticky","expand","bg","variant","style","textDecoration","Brand","width","height","logo","Toggle","aria-controls","Collapse","Nav","logoPokemon","App","cache","InMemoryCache","client","ApolloClient","uri","basename","backgroundImage","background","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d77a95b2.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nclass GlobalContextProvider extends Component {\r\n    state = { \r\n        mypokemons:[]\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        const localData = localStorage.getItem('states');\r\n        this.state = localData ? JSON.parse(localData) : this.state;\r\n    }\r\n    \r\n    addData = (data,state) => {\r\n        let newData = this.state[state];\r\n        if(Array.isArray(newData)) newData.push(data);\r\n        else newData = data;\r\n        this.setState({\r\n            [state]:newData\r\n        },()=>{this.storeData()});\r\n    }\r\n\r\n    storeData = () => {\r\n        localStorage.setItem('states',JSON.stringify(this.state));\r\n    }\r\n\r\n    removeData = (data,key=null,state) => {\r\n        let newData;\r\n        if(key) newData = this.state[state].filter(pokemon => pokemon[key]!==data);\r\n        else newData = data;\r\n        this.setState({\r\n            [state]:newData\r\n        },()=>{this.storeData()});\r\n    }\r\n\r\n    render() { \r\n        console.log(this.state);\r\n        return ( \r\n            <GlobalContext.Provider value={{...this.state, addContext: this.addData, removeContext: this.removeData}}>\r\n                {this.props.children}\r\n            </GlobalContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default GlobalContextProvider;","export default __webpack_public_path__ + \"static/media/pokeball.8e8e9d3a.svg\";","import React from 'react';\r\nimport logoStore from '../images/pokeball.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return ( \r\n        <div>\r\n            <div className=\"row justify-content-center pt-4\">\r\n                <div className=\"col-10 col-md-8 col-lg-8\">\r\n                    <div className=\"mycard col-12 mt-2\">\r\n                        <div className=\"col-12 align-self-center\">\r\n                            <img src={logoStore} className=\"img-home\" alt=\"logoStore\"/>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <p className=\"title-profile\">Welcome to PokeStore</p>\r\n                            <p className=\"title-profile\">Lets Catch & Collect Pokemons Here</p>\r\n                        </div>\r\n                        <div className=\"col-12 align-self-center\">\r\n                            <Link className=\"btn btn-warning btn-sm\" to=\"/pokemon/list\">Getting Started</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","// -- Dependencies & Libraries\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FaSearchPlus, FaRegHandPaper } from 'react-icons/fa';\r\n// --\r\n\r\nconst Card = (props) => {\r\n    const {data, release} = props;\r\n    const {name,image,count,nickName} = data;\r\n\r\n    return (\r\n        <div className=\"col-4 col-md-3 col-lg-2\">\r\n            <div className=\"mycard col-12 mt-2\">\r\n                <img className=\"img-fluid img-resp\" src={image} alt={nickName?nickName:name} />\r\n                <div className=\"row\">\r\n                    <span className=\"title float-center\">{name}</span>\r\n                </div>  \r\n                {nickName? <div className=\"row\"><span className=\"desc float-center\">{nickName}</span></div>:\"\"}\r\n                {count!==undefined? \r\n                    count > 0 ? <div className=\"row\"><span className=\"badge owned\">{\"owned : \"+count}</span></div>:\r\n                    <div className=\"row\"><span className=\"badge not-owned\">not owned</span></div>:\"\"\r\n                }\r\n                <Link className=\"btn btn-warning btn-sm mb-3 mt-3\" to={{ pathname:'/pokemon/list/detail/'+name, prop:data}}><FaSearchPlus/> Detail</Link>&nbsp;\r\n                {nickName?<button className=\"btn btn-danger btn-sm\" onClick={()=>{release(data)}}><FaRegHandPaper/> Release</button>:\"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Card;","import gql from 'graphql-tag';\r\n\r\nexport const GET_POKEMON_LIST = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      count\r\n      next\r\n      previous\r\n      results {\r\n        id\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const GET_POKEMON_DETAIL = gql`\r\n  query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","// -- Dependencies & Libraries\r\nimport React, { useContext, useState } from 'react';\r\nimport CardComponent from './../components/Card';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_POKEMON_LIST } from '../graphql/pokemonList';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\nimport { FaAngleLeft, FaAngleRight } from 'react-icons/fa';\r\n// --\r\n\r\nconst PokemonList = (props) => {\r\n    const [opt, setOpt] = useState({limit:14, offset:0});\r\n    const { mypokemons } = useContext(GlobalContext);\r\n    const { data:{pokemons = []} = {}, loading, error } = useQuery(GET_POKEMON_LIST,{\r\n        variables: {limit:opt.limit, offset: opt.offset}\r\n    });\r\n    \r\n    if (loading) return <div><p>&nbsp;</p><p>&nbsp;</p></div>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    const {results,count} = pokemons;\r\n\r\n    results.forEach((data)=> {\r\n        data.count = mypokemons.filter(pokemon => pokemon.id===data.id).length;\r\n    })\r\n\r\n    const setOffset = (status) => {\r\n        let offset = opt.offset+((opt.limit+1)*status);\r\n        setOpt({\r\n            limit:opt.limit,\r\n            offset:offset < 1 ? 1 : offset > count ? count : offset \r\n        });\r\n    }\r\n\r\n    return ( \r\n        <div>   \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 mr-auto\">\r\n                            <button type=\"button\" onClick={()=>{setOffset(-1)}}  className=\"btn\"><FaAngleLeft size={40} color={'orange'}/></button>\r\n                        </div>\r\n                        <div className=\"col-3 offset-6 ml-auto\">\r\n                            <button type=\"button\" onClick={()=>{setOffset(1)}}  className=\"btn\"><FaAngleRight size={40} color={'orange'}/></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row m-2\">\r\n                {results.map(data => <CardComponent key={data.id} data={data}/> )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n \r\nexport default PokemonList;","// -- Dependencies / Libraries\r\nimport React, {useContext } from 'react';\r\nimport CardComponent from './../components/Card';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaRegFutbol } from 'react-icons/fa';\r\n// --\r\n\r\nconst MyPokemon = (props) => {\r\n    const { mypokemons, removeContext } = useContext(GlobalContext);\r\n    const release = (pokemon) => {\r\n        const { nickName } = pokemon;\r\n        if(window.confirm(\"Are you sure want to release \"+nickName+\"?\")){\r\n            removeContext(nickName,'nickName','mypokemons');\r\n            alert(nickName+\" has been released\");\r\n        }\r\n    }\r\n    return ( \r\n        <div>\r\n            <div className=\"row\">   \r\n                <div className=\"row m-2\">\r\n                    {mypokemons.length>0 ? \r\n                        mypokemons.map(data => <CardComponent key={data.nickName} data={data} release={release}/> ) : \r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <p className=\"title-profile\">You don't have any pokemons, let's catch them</p>\r\n                            </div>\r\n                            <div className=\"row justify-content-center col-4 col-md-3 col-lg-2\">\r\n                                <Link className=\"btn btn-primary btn-sm\" to=\"/pokemon/list\"><FaRegFutbol/> Catch</Link>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default MyPokemon;","// -- Dependencies & Libraries\r\nimport React, { useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_POKEMON_DETAIL } from '../graphql/pokemonList';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\nimport { FaAngleLeft, FaRegHandPaper, FaRegFutbol } from 'react-icons/fa';\r\nimport { useHistory } from 'react-router-dom';\r\n// --\r\n\r\nconst PokemonProfile = (props) => {\r\n    const { addContext,removeContext,mypokemons } = useContext(GlobalContext);\r\n    const { prop } = useLocation();\r\n    const history = useHistory();\r\n    const { name } = useParams();\r\n\r\n    const { data:{pokemon = []} = {}, loading, error } = useQuery(GET_POKEMON_DETAIL,{\r\n        variables: {name:name}\r\n    });\r\n    \r\n    if (loading) return <div><p>&nbsp;</p><p>&nbsp;</p></div>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    const {id,image,nickName} = prop;\r\n    const {moves,types} = pokemon;\r\n\r\n    let newMoves = [];\r\n    for(let i=0;i<5;i++){\r\n        newMoves.push(moves[i]);\r\n    }\r\n\r\n    const chance = () => {\r\n        const rand = Math.random();\r\n        if(rand<0.5) return false;\r\n        return true;\r\n    };\r\n\r\n    const catchPokemon = () => {\r\n        if(!chance()) alert(\"Catch Pokemon Failed, Lets try again. . .\");\r\n        else{\r\n            let check,nickName;\r\n            do{\r\n                nickName = prompt(\"Congrats! You catch a \"+name+\", Give your new pokemon's nickname\");\r\n                if(nickName)\r\n                {\r\n                    check = mypokemons.filter(pokemon=>pokemon.nickName === nickName ).length;\r\n                    if(check) alert(\"Pokemon's nickname must be unique\");\r\n                }\r\n                else{\r\n                    alert(\"Please give a nickname\");\r\n                    check = true;\r\n                }\r\n            }\r\n            while(check);\r\n            addContext({id,name,image,nickName},'mypokemons');\r\n            alert(\"Your new \"+name+\" nickname is \"+nickName);\r\n            history.push('/mypokemon/list');  \r\n        }\r\n    }\r\n\r\n    const release = (pokemon) => {\r\n        const { nickName } = pokemon;\r\n        if(window.confirm(\"Are you sure want to release \"+nickName+\"?\")){\r\n            removeContext(nickName,'nickName','mypokemons');\r\n            alert(nickName+\" has been released\");\r\n            history.push('/mypokemon/list');\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"row mt-2\">\r\n                        <div className=\"col-4 mr-auto\">\r\n                            <button type=\"button\" onClick={()=>{history.goBack()}} className=\"btn btn-primary btn-sm\"><FaAngleLeft size={30}/>Back</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-10 col-md-8 col-lg-8\">\r\n                    <div className=\"mycard col-12 mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-5\">\r\n                                <img className=\"img-fluid img-profile\" src={image} alt={name}/>\r\n                                { nickName ? \r\n                                    <button onClick={()=>{release(prop)}} className=\"btn btn-danger btn-sm mt-2\"><FaRegHandPaper/> Release</button> : \r\n                                    <button onClick={catchPokemon} className=\"btn btn-primary btn-sm mt-2\"><FaRegFutbol/> Catch</button>\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-7\">\r\n                                <div className=\"row\">\r\n                                    <span className=\"title-profile float-center\">{name}</span>\r\n                                    { nickName ? <span className=\"title float-center\">Nickname : {nickName}</span>: \"\"}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <span className=\"title float-center\">Type :</span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {types.map(data => <span className=\"badge\" key={data.type.name}>{data.type.name}</span> )}\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <span className=\"title float-center\">Moves :</span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {newMoves.map(data => <span className=\"badge\" key={data.move.name}>{data.move.name}</span> )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default PokemonProfile;","export default __webpack_public_path__ + \"static/media/pikachu.f8578816.svg\";","export default __webpack_public_path__ + \"static/media/pokecenter.3de2bd7a.png\";","// -- Dependencies/Libraries\r\nimport React from 'react';\r\nimport { Navbar,Nav } from 'react-bootstrap';\r\nimport logo from '../images/pokeball.svg';\r\nimport logoPokemon from '../images/pikachu.svg';\r\nimport logoStore from '../images/pokecenter.png';\r\nimport {NavLink,Link} from 'react-router-dom';\r\n// --\r\n\r\nconst NavbarComponent = () => {\r\n    return ( \r\n        <Navbar collapseOnSelect sticky=\"top\" expand=\"true\" bg=\"dark\" variant=\"dark\">\r\n            <Link to='/' style={{ textDecoration: 'none' }}><Navbar.Brand className=\"m-2\"><img width=\"60px\" height=\"50px\" src={logo} alt=\"logo\"></img>PokeStore</Navbar.Brand></Link>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Link className=\"m-2\" to='/pokemon/list' style={{ textDecoration: 'none',color:'#fff' }}><img width=\"35px\" height=\"35px\" src={logoStore} alt=\"logoPokemon\"></img> Store</Link>\r\n                    <Link className=\"m-2\" to='/mypokemon/list' style={{ textDecoration: 'none', color:'#fff' }}><img width=\"35px\" height=\"35px\" src={logoPokemon} alt=\"logoPokemon\"></img> My Pokemon</Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n     );\r\n}\r\n \r\nexport default NavbarComponent;","export default __webpack_public_path__ + \"static/media/bg-3.c2f762d8.jpg\";","// -- Dependencies/Libraries\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport GlobalContextProvider from './contexts/GlobalContext';\r\n// --\r\n\r\n// -- Pages\r\nimport Home from './pages/Home';\r\nimport PokemonList from './pages/PokemonList';\r\nimport MyPokemon from './pages/MyPokemon';\r\nimport PokemonProfile from './pages/PokemonProfile';\r\n\r\n// --\r\n\r\n// -- Components\r\nimport NavbarComponent from './components/Navbar';\r\n// --\r\n\r\n// -- Addons/External\r\nimport './App.css';\r\nimport background from './bg-3.jpg';\r\nimport { BASE_PATH } from './constants/constant';\r\n// --\r\n\r\nfunction App() {\r\n  const cache = new InMemoryCache();\r\n  const client = new ApolloClient({\r\n    uri : 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n    cache\r\n  });\r\n\r\n  return (\r\n    <GlobalContextProvider>\r\n      <ApolloProvider client={client}>\r\n        <BrowserRouter basename={BASE_PATH}>\r\n          <NavbarComponent />\r\n          <div className=\"App\">\r\n            <div className=\"container-fluid\" style ={ { backgroundImage: \"url(\"+background+\")\" } }>\r\n              <header>\r\n                <Switch>\r\n                  <Route \r\n                    exact path='/'\r\n                    component = {Home}\r\n                  />\r\n                  <Route \r\n                    exact path='/pokemon/list'\r\n                    component = {PokemonList}\r\n                  />\r\n                  <Route \r\n                    exact path='/mypokemon/list'\r\n                    component = {MyPokemon}\r\n                  />\r\n                  <Route \r\n                    exact path='/pokemon/list/detail/:name'\r\n                    component = {PokemonProfile}\r\n                  />\r\n                  <Redirect to='/' />\r\n                </Switch>\r\n              </header>\r\n            </div>\r\n          </div>  \r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </GlobalContextProvider>\r\n  );\r\n}\r\n\r\nfunction withProps(Component, props) {\r\n  return function(matchProps) {\r\n    return <Component {...props} {...matchProps} />\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export const BASE_PATH = '/react-app-1';","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}